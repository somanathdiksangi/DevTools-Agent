# ===== LLM (required) =====
# Get a key from groq.com; needed for bug reports and small code patches
GROQ_API_KEY=your_groq_api_key_here
# Pick a currently supported Groq model (you can change this if needed)
MODEL_NAME=llama-3.1-70b-specdec

# ===== Tool Router =====

USE_MOCK_TOOLROUTER=true
COMPOSIO_API_KEY=your_groq_api_key_here

# ===== Storage / Cloud CLI (optional) =====
# Choose a provider label (s3 | gcs | azure); mock mode ignores this
STORAGE_PROVIDER=s3

# ===== LangGraph / Self-healing controls =====
# Guard rails to avoid infinite loops but allow meaningful retries
GRAPH_RECURSION_LIMIT=100
MAX_PATCH_ATTEMPTS=3

# ===== Vector memory (Chroma) =====
# Leave empty for in-memory; set a folder path to persist embeddings
CHROMA_PERSIST_DIR=.chroma

# ===== Telemetry / Logs =====
# File where normalized spans are written (JSONL)
TELEMETRY_EXPORT=artifacts/traces.jsonl
# Optional webhook to POST all spans (leave blank to skip)
LOG_EXPORT_URL=

# ===== CI / PR helpers (optional) =====
# Demo label for CI helper; change if you wire a different provider
CI_PROVIDER=circleci

# ===== Notification toggles (optional) =====
# If true, send a tool call on bug or after a successful patch (needs non-mock)
NOTIFY_ON_BUG=false
NOTIFY_ON_PATCH=false

# ===== Run/session info (auto-filled if empty) =====
RUN_ID=
